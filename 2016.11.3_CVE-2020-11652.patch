diff --git a/salt/auth/__init__.py b/salt/auth/__init__.py
index 4815886ff5..d92ee2b2d2 100644
--- a/salt/auth/__init__.py
+++ b/salt/auth/__init__.py
@@ -203,6 +203,8 @@ class LoadAuth(object):
         not valid
         '''
         t_path = os.path.join(self.opts['token_dir'], tok)
+        if not salt.utils.verify.clean_path(self.opts['token_dir'], t_path):
+            return {}
         if not os.path.isfile(t_path):
             return {}
         with salt.utils.fopen(t_path, 'rb') as fp_:
diff --git a/salt/utils/verify.py b/salt/utils/verify.py
index 5e320c3b59..954eaea067 100644
--- a/salt/utils/verify.py
+++ b/salt/utils/verify.py
@@ -28,6 +28,7 @@ from salt.exceptions import SaltClientError, SaltSystemExit, \
     CommandExecutionError
 import salt.defaults.exitcodes
 import salt.utils
+import salt.ext.six

 log = logging.getLogger(__name__)

@@ -460,6 +461,49 @@ def check_max_open_files(opts):
     msg += 'Please consider raising this value.'
     log.log(level=level, msg=msg)

+def _realpath_darwin(path):
+    base = ''
+    for part in path.split(os.path.sep)[1:]:
+        if base != '':
+            if os.path.islink(os.path.sep.join([base, part])):
+                base = os.readlink(os.path.sep.join([base, part]))
+            else:
+                base = os.path.abspath(os.path.sep.join([base, part]))
+        else:
+            base = os.path.abspath(os.path.sep.join([base, part]))
+    return base
+
+
+def _realpath_windows(path):
+    base = ''
+    for part in path.split(os.path.sep):
+        if base != '':
+            try:
+                part = os.readlink(os.path.sep.join([base, part]))
+                base = os.path.abspath(part)
+            except OSError:
+                base = os.path.abspath(os.path.sep.join([base, part]))
+        else:
+            base = part
+    return base
+
+
+def _realpath(path):
+    '''
+    Cross platform realpath method. On Windows when python 3, this method
+    uses the os.readlink method to resolve any filesystem links. On Windows
+    when python 2, this method is a no-op. All other platforms and version use
+    os.path.realpath
+    '''
+    if salt.utils.is_darwin():
+           return _realpath_darwin(path)
+    elif salt.utils.is_windows():
+        if salt.ext.six.PY3:
+            return _realpath_windows(path)
+        else:
+            return path
+    return os.path.realpath(path)
+

 def clean_path(root, path, subdir=False):
     '''
@@ -467,17 +511,19 @@ def clean_path(root, path, subdir=False):
     under said root. Pass in subdir=True if the path can result in a
     subdirectory of the root instead of having to reside directly in the root
     '''
-    if not os.path.isabs(root):
+    real_root = _realpath(root)
+    if not os.path.isabs(real_root):
         return ''
     if not os.path.isabs(path):
         path = os.path.join(root, path)
     path = os.path.normpath(path)
+    real_path = _realpath(path)
     if subdir:
-        if path.startswith(root):
-            return path
+        if real_path.startswith(real_root):
+            return real_path
     else:
-        if os.path.dirname(path) == os.path.normpath(root):
-            return path
+        if os.path.dirname(real_path) == os.path.normpath(real_root):
+            return real_path
     return ''


diff --git a/salt/wheel/config.py b/salt/wheel/config.py
index c4976fa45c..850141c0ab 100644
--- a/salt/wheel/config.py
+++ b/salt/wheel/config.py
@@ -12,6 +12,7 @@ import os
 import yaml

 # Import salt libs
+import salt.utils.verify
 import salt.config

 log = logging.getLogger(__name__)
@@ -80,6 +81,8 @@ def update_config(file_name, yaml_contents):
             os.makedirs(dir_path, 0o755)

         file_path = os.path.join(dir_path, file_name)
+        if not salt.utils.verify.clean_path(dir_path, file_path):
+            return 'Invalid path'
         with salt.utils.fopen(file_path, 'w') as fp_:
             fp_.write(yaml_out)

diff --git a/salt/wheel/file_roots.py b/salt/wheel/file_roots.py
index ff13d3971b..fcc0cd11b9 100644
--- a/salt/wheel/file_roots.py
+++ b/salt/wheel/file_roots.py
@@ -8,6 +8,7 @@ from __future__ import absolute_import
 import os

 # Import salt libs
+import salt.utils.verify
 import salt.utils

 # Import 3rd-party libs
@@ -24,6 +25,8 @@ def find(path, saltenv='base'):
         return ret
     for root in __opts__['file_roots'][saltenv]:
         full = os.path.join(root, path)
+        if not salt.utils.verify.clean_path(root, full):
+            continue
         if os.path.isfile(full):
             # Add it to the dict
             with salt.utils.fopen(full, 'rb') as fp_:
@@ -104,7 +107,10 @@ def write(data, path, saltenv='base', index=0):
     if os.path.isabs(path):
         return ('The path passed in {0} is not relative to the environment '
                 '{1}').format(path, saltenv)
-    dest = os.path.join(__opts__['file_roots'][saltenv][index], path)
+    root = __opts__['file_roots'][saltenv][index]
+    dest = os.path.join(root, path)
+    if not salt.utils.verify.clean_path(root, dest, subdir=True):
+        return 'Invalid path: {}'.format(path)
     dest_dir = os.path.dirname(dest)
     if not os.path.isdir(dest_dir):
         os.makedirs(dest_dir)
